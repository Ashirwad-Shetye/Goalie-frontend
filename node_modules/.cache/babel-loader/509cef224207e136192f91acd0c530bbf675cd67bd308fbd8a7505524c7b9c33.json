{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from './authService';\n\n// Get user from local storage\n\nconst user = JSON.parse(localStorage.getItem('user'));\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: ''\n};\n\n// Register user\n\nexport const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n  try {\n    return await authService.register(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = false;\n      state.message = '';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","localStorage","getItem","initialState","isError","isSuccess","isLoading","message","register","thunkAPI","error","response","data","toString","rejectWithValue","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/home/dilip/Desktop/pesto/project/Goalie-frontend/src/features/auth/authSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit'\nimport authService from './authService'\n\n// Get user from local storage\n\nconst user = JSON.parse(localStorage.getItem('user')!)\n\nconst initialState = {\n    user: user ? user : null,\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    message: '',\n}\n\n// Register user\n\nexport const register = createAsyncThunk('auth/register', async(user, thunkAPI) => {\n    try{\n        return await authService.register(user);\n    } catch(error: any) {\n        const message = \n            (   error.response && \n                error.response.data && \n                error.response.data.message) || \n                error.message || \n                error.toString()\n        return thunkAPI.rejectWithValue(message)\n    }\n})\n\nexport const authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        reset: (state) => {\n            state.isLoading = false;\n            state.isError = false;\n            state.isSuccess = false;\n            state.message = '';\n        }\n    },\n    extraReducers: (builder) => {\n        builder\n        .addCase(register.pending, (state) => {\n            state.isLoading = true;\n        })\n        .addCase(register.fulfilled, (state, action) => {\n            state.isLoading = false;\n            state.isSuccess = true;\n            state.user = action.payload;\n        })\n        .addCase(register.rejected, (state, action: PayloadAction<any>) => {\n            state.isLoading = false;\n            state.isError = true;\n            state.message = action.payload;\n            state.user = null;\n        })\n    },\n})\n\nexport const {reset} = authSlice.actions\n\nexport default authSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAuB,kBAAkB;AAC/E,OAAOC,WAAW,MAAM,eAAe;;AAEvC;;AAEA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAE;AAEtD,MAAMC,YAAY,GAAG;EACjBL,IAAI,EAAEA,IAAI,GAAGA,IAAI,GAAG,IAAI;EACxBM,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACb,CAAC;;AAED;;AAEA,OAAO,MAAMC,QAAQ,GAAGZ,gBAAgB,CAAC,eAAe,EAAE,OAAME,IAAI,EAAEW,QAAQ,KAAK;EAC/E,IAAG;IACC,OAAO,MAAMZ,WAAW,CAACW,QAAQ,CAACV,IAAI,CAAC;EAC3C,CAAC,CAAC,OAAMY,KAAU,EAAE;IAChB,MAAMH,OAAO,GACLG,KAAK,CAACC,QAAQ,IACdD,KAAK,CAACC,QAAQ,CAACC,IAAI,IACnBF,KAAK,CAACC,QAAQ,CAACC,IAAI,CAACL,OAAO,IAC3BG,KAAK,CAACH,OAAO,IACbG,KAAK,CAACG,QAAQ,EAAE;IACxB,OAAOJ,QAAQ,CAACK,eAAe,CAACP,OAAO,CAAC;EAC5C;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMQ,SAAS,GAAGpB,WAAW,CAAC;EACjCqB,IAAI,EAAE,MAAM;EACZb,YAAY;EACZc,QAAQ,EAAE;IACNC,KAAK,EAAGC,KAAK,IAAK;MACdA,KAAK,CAACb,SAAS,GAAG,KAAK;MACvBa,KAAK,CAACf,OAAO,GAAG,KAAK;MACrBe,KAAK,CAACd,SAAS,GAAG,KAAK;MACvBc,KAAK,CAACZ,OAAO,GAAG,EAAE;IACtB;EACJ,CAAC;EACDa,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACNC,OAAO,CAACd,QAAQ,CAACe,OAAO,EAAGJ,KAAK,IAAK;MAClCA,KAAK,CAACb,SAAS,GAAG,IAAI;IAC1B,CAAC,CAAC,CACDgB,OAAO,CAACd,QAAQ,CAACgB,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC5CN,KAAK,CAACb,SAAS,GAAG,KAAK;MACvBa,KAAK,CAACd,SAAS,GAAG,IAAI;MACtBc,KAAK,CAACrB,IAAI,GAAG2B,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDJ,OAAO,CAACd,QAAQ,CAACmB,QAAQ,EAAE,CAACR,KAAK,EAAEM,MAA0B,KAAK;MAC/DN,KAAK,CAACb,SAAS,GAAG,KAAK;MACvBa,KAAK,CAACf,OAAO,GAAG,IAAI;MACpBe,KAAK,CAACZ,OAAO,GAAGkB,MAAM,CAACC,OAAO;MAC9BP,KAAK,CAACrB,IAAI,GAAG,IAAI;IACrB,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACoB;AAAK,CAAC,GAAGH,SAAS,CAACa,OAAO;AAExC,eAAeb,SAAS,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}