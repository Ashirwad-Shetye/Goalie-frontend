{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { userNavigate } from 'react-router-dom';\nimport isEmpty from \"lodash/isEmpty\";\nimport { getItemFromStorage } from \"./storage\";\nimport { DEFAULT_URL, authHeaderKeys } from \"./constants\";\nexport const setAuthHeaders = config => {\n  if (!isEmpty(getItemFromStorage(\"token\"))) {\n    authHeaderKeys.forEach(key => {\n      if (key.toLowerCase() === \"authorization\".toLowerCase()) {\n        config.headers.common[key] = `Bearer ${getItemFromStorage(\"token\")}`;\n      } else {\n        if (getItemFromStorage(key)) {\n          config.headers.common[key] = getItemFromStorage(key);\n        }\n      }\n    });\n  }\n  return config;\n};\nexport const setAuthHeadersAfterLogin = function (headers) {\n  let accessToken = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  console.log(headers);\n  axios.defaults.headers[\"authorization\"] = `Bearer ${accessToken}`;\n  //   authHeaderKeys.forEach((key) => {\n  //     if (key.toLowerCase() === \"authorization\".toLowerCase() && accessToken) {\n  //       axios.defaults.headers.common[key] = `Bearer ${accessToken}`;\n  //     } else {\n  //       if (!isEmpty(headers[key])) {\n  //         axios.defaults.headers.common[key] = headers[key];\n  //       }\n  //     }\n  //   });\n};\n\naxios.defaults.baseURL = DEFAULT_URL;\naxios.defaults.timeout = 120000;\naxios.defaults.headers.common[\"Content-Type\"] = \"application/json\";\naxios.defaults.headers.common.Accept = \"application/json\";\naxios.defaults.headers.common.Platform = \"Web\";\nconst instance = axios.create();\nexport const basicInstance = axios.create();\nconst handleErrors = function () {\n  _s();\n  let store = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let error = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(error);\n  if (process.env.NODE_ENV === \"development\") {\n    const navigate = useNavigate();\n    navigate('/error');\n\n    // console.log(\"Error Logging :: \", error.message, JSON.stringify(error))\n  }\n\n  if (error.message) {\n    if (error.message === \"Network Error\") {\n      // store.dispatch(showToaster({message: 'No Internet connection. Please check your internet settings', type: 'error'}))\n      return Promise.reject(error);\n    }\n  }\n  if (!error.response) {\n    if (error.code === \"ECONNABORTED\") {\n      // store.dispatch(showToaster({type:'error', message: error.message}))\n      const timeoutError = error;\n      timeoutError.response = {\n        data: {}\n      };\n      return Promise.reject(timeoutError);\n    }\n    // store.dispatch(showToaster({type: 'error', message: error.message }))\n    return Promise.reject(error);\n  }\n  if (error.response) {\n    let errorMessage = \"Something Went Wrong\";\n    switch (error.response.status) {\n      case 400:\n        if (error.response.data.errors) {\n          errorMessage = error.response.data.errors;\n        }\n        // store.dispatch(showToaster({message: errorMessage, type: 'error'}))\n        break;\n      default:\n      // store.dispatch(showToaster({ type: 'error', message: error.message}))\n    }\n  }\n\n  return Promise.reject(error);\n};\n_s(handleErrors, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", true);\nexport const setupBasicInterceptor = () => {\n  instance.interceptors.response.use(response => Promise.resolve(response), error => Promise.reject(error));\n  instance.interceptors.request.use(config => setAuthHeaders(config), error => Promise.reject(error));\n};\nexport default instance;","map":{"version":3,"names":["axios","userNavigate","isEmpty","getItemFromStorage","DEFAULT_URL","authHeaderKeys","setAuthHeaders","config","forEach","key","toLowerCase","headers","common","setAuthHeadersAfterLogin","accessToken","console","log","defaults","baseURL","timeout","Accept","Platform","instance","create","basicInstance","handleErrors","store","error","process","env","NODE_ENV","navigate","useNavigate","message","Promise","reject","response","code","timeoutError","data","errorMessage","status","errors","setupBasicInterceptor","interceptors","use","resolve","request"],"sources":["/home/dilip/Desktop/pesto/project/Goalie-frontend/src/services/base.js"],"sourcesContent":["import axios from \"axios\";\nimport { userNavigate } from 'react-router-dom';\nimport isEmpty from \"lodash/isEmpty\";\nimport { getItemFromStorage } from \"./storage\";\nimport { DEFAULT_URL, authHeaderKeys } from \"./constants\";\n\nexport const setAuthHeaders = (config) => {\n  if (!isEmpty(getItemFromStorage(\"token\"))) {\n    authHeaderKeys.forEach((key) => {\n      if (key.toLowerCase() === \"authorization\".toLowerCase()) {\n        config.headers.common[key] = `Bearer ${getItemFromStorage(\"token\")}`;\n      } else {\n        if (getItemFromStorage(key)) {\n          config.headers.common[key] = getItemFromStorage(key);\n        }\n      }\n    });\n  }\n  return config;\n};\n\nexport const setAuthHeadersAfterLogin = (headers, accessToken = null) => {\n  console.log(headers);\n  axios.defaults.headers[\"authorization\"] = `Bearer ${accessToken}`;\n  //   authHeaderKeys.forEach((key) => {\n  //     if (key.toLowerCase() === \"authorization\".toLowerCase() && accessToken) {\n  //       axios.defaults.headers.common[key] = `Bearer ${accessToken}`;\n  //     } else {\n  //       if (!isEmpty(headers[key])) {\n  //         axios.defaults.headers.common[key] = headers[key];\n  //       }\n  //     }\n  //   });\n};\n\naxios.defaults.baseURL = DEFAULT_URL;\naxios.defaults.timeout = 120000;\naxios.defaults.headers.common[\"Content-Type\"] = \"application/json\";\naxios.defaults.headers.common.Accept = \"application/json\";\naxios.defaults.headers.common.Platform = \"Web\";\n\nconst instance = axios.create();\n\nexport const basicInstance = axios.create();\n\nconst handleErrors = (store = null, error) => {\n  console.log(error);\n  if (process.env.NODE_ENV === \"development\") {\n    const navigate=useNavigate()\n    navigate('/error')\n    \n    // console.log(\"Error Logging :: \", error.message, JSON.stringify(error))\n  }\n  if (error.message) {\n    if (error.message === \"Network Error\") {\n      // store.dispatch(showToaster({message: 'No Internet connection. Please check your internet settings', type: 'error'}))\n      return Promise.reject(error);\n    }\n  }\n  if (!error.response) {\n    if (error.code === \"ECONNABORTED\") {\n      // store.dispatch(showToaster({type:'error', message: error.message}))\n      const timeoutError = error;\n      timeoutError.response = {\n        data: {},\n      };\n      return Promise.reject(timeoutError);\n    }\n    // store.dispatch(showToaster({type: 'error', message: error.message }))\n    return Promise.reject(error);\n  }\n  if (error.response) {\n    let errorMessage = \"Something Went Wrong\";\n    switch (error.response.status) {\n      case 400:\n        if (error.response.data.errors) {\n          errorMessage = error.response.data.errors;\n        }\n        // store.dispatch(showToaster({message: errorMessage, type: 'error'}))\n        break;\n      default:\n      // store.dispatch(showToaster({ type: 'error', message: error.message}))\n    }\n  }\n  return Promise.reject(error);\n};\n\nexport const setupBasicInterceptor = () => {\n  instance.interceptors.response.use(\n    (response) => Promise.resolve(response),\n    (error) => Promise.reject(error)\n  );\n  instance.interceptors.request.use(\n    (config) => setAuthHeaders(config),\n    (error) => Promise.reject(error)\n  );\n};\n\nexport default instance;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,OAAOC,OAAO,MAAM,gBAAgB;AACpC,SAASC,kBAAkB,QAAQ,WAAW;AAC9C,SAASC,WAAW,EAAEC,cAAc,QAAQ,aAAa;AAEzD,OAAO,MAAMC,cAAc,GAAIC,MAAM,IAAK;EACxC,IAAI,CAACL,OAAO,CAACC,kBAAkB,CAAC,OAAO,CAAC,CAAC,EAAE;IACzCE,cAAc,CAACG,OAAO,CAAEC,GAAG,IAAK;MAC9B,IAAIA,GAAG,CAACC,WAAW,EAAE,KAAK,eAAe,CAACA,WAAW,EAAE,EAAE;QACvDH,MAAM,CAACI,OAAO,CAACC,MAAM,CAACH,GAAG,CAAC,GAAI,UAASN,kBAAkB,CAAC,OAAO,CAAE,EAAC;MACtE,CAAC,MAAM;QACL,IAAIA,kBAAkB,CAACM,GAAG,CAAC,EAAE;UAC3BF,MAAM,CAACI,OAAO,CAACC,MAAM,CAACH,GAAG,CAAC,GAAGN,kBAAkB,CAACM,GAAG,CAAC;QACtD;MACF;IACF,CAAC,CAAC;EACJ;EACA,OAAOF,MAAM;AACf,CAAC;AAED,OAAO,MAAMM,wBAAwB,GAAG,UAACF,OAAO,EAAyB;EAAA,IAAvBG,WAAW,uEAAG,IAAI;EAClEC,OAAO,CAACC,GAAG,CAACL,OAAO,CAAC;EACpBX,KAAK,CAACiB,QAAQ,CAACN,OAAO,CAAC,eAAe,CAAC,GAAI,UAASG,WAAY,EAAC;EACjE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC;;AAEDd,KAAK,CAACiB,QAAQ,CAACC,OAAO,GAAGd,WAAW;AACpCJ,KAAK,CAACiB,QAAQ,CAACE,OAAO,GAAG,MAAM;AAC/BnB,KAAK,CAACiB,QAAQ,CAACN,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC,GAAG,kBAAkB;AAClEZ,KAAK,CAACiB,QAAQ,CAACN,OAAO,CAACC,MAAM,CAACQ,MAAM,GAAG,kBAAkB;AACzDpB,KAAK,CAACiB,QAAQ,CAACN,OAAO,CAACC,MAAM,CAACS,QAAQ,GAAG,KAAK;AAE9C,MAAMC,QAAQ,GAAGtB,KAAK,CAACuB,MAAM,EAAE;AAE/B,OAAO,MAAMC,aAAa,GAAGxB,KAAK,CAACuB,MAAM,EAAE;AAE3C,MAAME,YAAY,GAAG,YAAyB;EAAA;EAAA,IAAxBC,KAAK,uEAAG,IAAI;EAAA,IAAEC,KAAK;EACvCZ,OAAO,CAACC,GAAG,CAACW,KAAK,CAAC;EAClB,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;IAC1C,MAAMC,QAAQ,GAACC,WAAW,EAAE;IAC5BD,QAAQ,CAAC,QAAQ,CAAC;;IAElB;EACF;;EACA,IAAIJ,KAAK,CAACM,OAAO,EAAE;IACjB,IAAIN,KAAK,CAACM,OAAO,KAAK,eAAe,EAAE;MACrC;MACA,OAAOC,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;IAC9B;EACF;EACA,IAAI,CAACA,KAAK,CAACS,QAAQ,EAAE;IACnB,IAAIT,KAAK,CAACU,IAAI,KAAK,cAAc,EAAE;MACjC;MACA,MAAMC,YAAY,GAAGX,KAAK;MAC1BW,YAAY,CAACF,QAAQ,GAAG;QACtBG,IAAI,EAAE,CAAC;MACT,CAAC;MACD,OAAOL,OAAO,CAACC,MAAM,CAACG,YAAY,CAAC;IACrC;IACA;IACA,OAAOJ,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;EAC9B;EACA,IAAIA,KAAK,CAACS,QAAQ,EAAE;IAClB,IAAII,YAAY,GAAG,sBAAsB;IACzC,QAAQb,KAAK,CAACS,QAAQ,CAACK,MAAM;MAC3B,KAAK,GAAG;QACN,IAAId,KAAK,CAACS,QAAQ,CAACG,IAAI,CAACG,MAAM,EAAE;UAC9BF,YAAY,GAAGb,KAAK,CAACS,QAAQ,CAACG,IAAI,CAACG,MAAM;QAC3C;QACA;QACA;MACF;MACA;IAAA;EAEJ;;EACA,OAAOR,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC;AAC9B,CAAC;AAAC,GAxCIF,YAAY;AA0ClB,OAAO,MAAMkB,qBAAqB,GAAG,MAAM;EACzCrB,QAAQ,CAACsB,YAAY,CAACR,QAAQ,CAACS,GAAG,CAC/BT,QAAQ,IAAKF,OAAO,CAACY,OAAO,CAACV,QAAQ,CAAC,EACtCT,KAAK,IAAKO,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC,CACjC;EACDL,QAAQ,CAACsB,YAAY,CAACG,OAAO,CAACF,GAAG,CAC9BtC,MAAM,IAAKD,cAAc,CAACC,MAAM,CAAC,EACjCoB,KAAK,IAAKO,OAAO,CAACC,MAAM,CAACR,KAAK,CAAC,CACjC;AACH,CAAC;AAED,eAAeL,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}