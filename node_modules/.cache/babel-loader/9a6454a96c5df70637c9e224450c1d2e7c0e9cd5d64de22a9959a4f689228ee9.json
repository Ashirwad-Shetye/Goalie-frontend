{"ast":null,"code":"import axios from 'axios';\nimport isEmpty from 'lodash/isEmpty';\nimport { getItemFromStorage } from './storage';\nimport { DEFAULT_URL, authHeaderKeys } from './constants';\nexport const setAuthHeaders = config => {\n  if (!isEmpty(getItemFromStorage('token'))) {\n    authHeaderKeys.forEach(key => {\n      if (key.toLowerCase() === 'authorization'.toLowerCase()) {\n        config.headers.common[key] = `Bearer ${getItemFromStorage('token')}`;\n      } else {\n        if (getItemFromStorage(key)) {\n          config.headers.common[key] = getItemFromStorage(key);\n        }\n      }\n    });\n  }\n  return config;\n};\nexport const setAuthHeadersAfterLogin = function (headers) {\n  let accessToken = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  authHeaderKeys.forEach(key => {\n    if (key.toLowerCase() === 'authorization'.toLowerCase() && accessToken) {\n      axios.defaults.headers.common[key] = `Bearer ${accessToken}`;\n    } else {\n      if (!isEmpty(headers[key])) {\n        axios.defaults.headers.common[key] = headers[key];\n      }\n    }\n  });\n};\naxios.defaults.baseURL = DEFAULT_URL;\naxios.defaults.timeout = 120000;\naxios.defaults.headers.common['Content-Type'] = 'application/json';\naxios.defaults.headers.common.Accept = 'application/json';\naxios.defaults.headers.common.Platform = 'Web';\nconst instance = axios.create();\nexport const basicInstance = axios.create();\nconst handleErrors = function () {\n  let store = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  let error = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(error);\n  if (process.env.NODE_ENV === 'development') {\n    // console.log(\"Error Logging :: \", error.message, JSON.stringify(error))\n  }\n  if (error.message) {\n    if (error.message === \"Network Error\") {\n      // store.dispatch(showToaster({message: 'No Internet connection. Please check your internet settings', type: 'error'}))\n      return Promise.reject(error);\n    }\n  }\n  if (!error.response) {\n    if (error.code === \"ECONNABORTED\") {\n      // store.dispatch(showToaster({type:'error', message: error.message}))\n      const timeoutError = error;\n      timeoutError.response = {\n        data: {}\n      };\n      return Promise.reject(timeoutError);\n    }\n    // store.dispatch(showToaster({type: 'error', message: error.message }))\n    return Promise.reject(error);\n  }\n  if (error.response) {\n    let errorMessage = \"Something Went Wrong\";\n    switch (error.response.status) {\n      case 400:\n        if (error.response.data.errors) {\n          errorMessage = error.response.data.errors;\n        }\n        // store.dispatch(showToaster({message: errorMessage, type: 'error'}))\n        break;\n      default:\n      // store.dispatch(showToaster({ type: 'error', message: error.message}))               \n    }\n  }\n\n  return Promise.reject(error);\n};\nexport const setupBasicInterceptor = () => {\n  instance.interceptors.response.use(response => Promise.resolve(response), error => Promise.reject(error));\n  instance.interceptors.request.use(config => setAuthHeaders(config), error => Promise.reject(error));\n};\nexport default instance;","map":{"version":3,"names":["axios","isEmpty","getItemFromStorage","DEFAULT_URL","authHeaderKeys","setAuthHeaders","config","forEach","key","toLowerCase","headers","common","setAuthHeadersAfterLogin","accessToken","defaults","baseURL","timeout","Accept","Platform","instance","create","basicInstance","handleErrors","store","error","console","log","process","env","NODE_ENV","message","Promise","reject","response","code","timeoutError","data","errorMessage","status","errors","setupBasicInterceptor","interceptors","use","resolve","request"],"sources":["/home/dilip/Desktop/pesto/project/Goalie-frontend/src/services/base.js"],"sourcesContent":["import axios from 'axios';\nimport isEmpty from 'lodash/isEmpty';\nimport { getItemFromStorage } from './storage';\nimport {\n    DEFAULT_URL, authHeaderKeys\n} from './constants';\n\nexport const setAuthHeaders = (config) => {\n    if(!isEmpty(getItemFromStorage('token'))){\n    authHeaderKeys.forEach((key) => {\n        if(key.toLowerCase() === 'authorization'.toLowerCase()){\n            config.headers.common[key] =  `Bearer ${getItemFromStorage('token')}`;\n        }\n\n        else{\n            if (getItemFromStorage(key)){\n                config.headers.common[key] = getItemFromStorage(key);\n            }\n        }\n    })\n}\nreturn config;\n}\n\n\nexport const setAuthHeadersAfterLogin = (headers, accessToken=null) => {\n    authHeaderKeys.forEach((key) => {\n        if(key.toLowerCase() === 'authorization'.toLowerCase() && accessToken){\n            axios.defaults.headers.common[key] = `Bearer ${accessToken}`;\n        }\n        else{\n            if(!isEmpty(headers[key])){\n                axios.defaults.headers.common[key] = headers[key];\n            }\n        }\n    })\n}\n\n\naxios.defaults.baseURL = DEFAULT_URL;\naxios.defaults.timeout = 120000;\naxios.defaults.headers.common['Content-Type'] = 'application/json';\naxios.defaults.headers.common.Accept = 'application/json';\naxios.defaults.headers.common.Platform = 'Web';\n\nconst instance = axios.create();\n\nexport const basicInstance = axios.create();\n\nconst handleErrors = (store = null, error) => {\n    console.log(error)\n    if(process.env.NODE_ENV === 'development'){\n        // console.log(\"Error Logging :: \", error.message, JSON.stringify(error))\n    }\n    if(error.message){\n        if(error.message === \"Network Error\"){\n            // store.dispatch(showToaster({message: 'No Internet connection. Please check your internet settings', type: 'error'}))\n            return Promise.reject(error);\n        }\n    }\n    if(!error.response){\n        if(error.code === \"ECONNABORTED\"){\n            // store.dispatch(showToaster({type:'error', message: error.message}))\n            const timeoutError = error;\n            timeoutError.response = {\n                data: {}\n            }\n            return Promise.reject(timeoutError);\n        }\n        // store.dispatch(showToaster({type: 'error', message: error.message }))\n        return Promise.reject(error);\n    }\n    if(error.response){\n        let errorMessage = \"Something Went Wrong\";\n        switch(error.response.status){\n            case(400):\n                if(error.response.data.errors){\n                    errorMessage = error.response.data.errors;\n                }\n                // store.dispatch(showToaster({message: errorMessage, type: 'error'}))\n                break;\n            default:\n                // store.dispatch(showToaster({ type: 'error', message: error.message}))               \n        }\n    }\n    return Promise.reject(error);\n}\n\nexport const setupBasicInterceptor = () => {\n    instance.interceptors.response.use(\n        (response) => Promise.resolve(response),\n        (error) => Promise.reject(error)\n    )\n    instance.interceptors.request.use(\n        (config) => setAuthHeaders(config),\n        (error) => Promise.reject(error)\n    )\n}\n\nexport default instance;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}