{"ast":null,"code":"import { userLogin, userRegister, userSetGoal, getUserGoalData, getMyInfo, getUserGoals, createNewPost, getAllPosts, updateLikePost } from \"./apiCalls\";\nimport { setAuthHeadersAfterLogin } from \"./base\";\nimport { saveAuthDataToDevice } from \"./storage\";\nimport { toast } from \"react-toastify\";\nexport const login = (params, navigate, setIsLoggedIn) => {\n  userLogin(params).then(response => {\n    setAuthHeadersAfterLogin(response.headers, response.data.token);\n    saveAuthDataToDevice(response.headers, response.data.token);\n    setIsLoggedIn(true);\n    toast.success(\"User Logged In Successfully\");\n    navigate(\"/dashboard\");\n  }).catch(error => {\n    toast.error(error.message);\n  });\n};\nexport const register = params => {\n  console.log(params);\n  return userRegister(params);\n};\nexport const setGoal = (params, navigate) => {\n  userSetGoal(params).then(response => {\n    navigate(\"/dashboard\");\n    toast.success(\"Goal Added Successfully\");\n  }).catch(error => {\n    toast.error(\"Someting went wrong\");\n  });\n};\nexport const getGoalData = () => {\n  return getUserGoalData();\n};\nexport const getUserInfo = () => {\n  return getMyInfo();\n};\nexport const getUsersAllGoals = () => {\n  return getUserGoals();\n};\nexport const setNewPost = params => {\n  createNewPost(params).then(response => {\n    console.log(response);\n    toast.success(\"Post created succesfully\");\n  }).catch(error => {\n    console.log(error);\n    toast.error(\"Something went wrong\");\n  });\n};\nexport const getAllPostsList = () => {\n  return getAllPosts();\n};\nexport const likePost = () => {\n  updateLikePost().then(response => {\n    console.log(response);\n    toast.success(\"Post liked\");\n  }).catch(error => {\n    console.log(error);\n    toast.error(\"something went wrong\");\n  });\n};","map":{"version":3,"names":["userLogin","userRegister","userSetGoal","getUserGoalData","getMyInfo","getUserGoals","createNewPost","getAllPosts","updateLikePost","setAuthHeadersAfterLogin","saveAuthDataToDevice","toast","login","params","navigate","setIsLoggedIn","then","response","headers","data","token","success","catch","error","message","register","console","log","setGoal","getGoalData","getUserInfo","getUsersAllGoals","setNewPost","getAllPostsList","likePost"],"sources":["/home/dilip/Desktop/pesto/project/Goalie-frontend/src/services/serverCalls.js"],"sourcesContent":["import {\n  userLogin,\n  userRegister,\n  userSetGoal,\n  getUserGoalData,\n  getMyInfo,\n  getUserGoals,\n  createNewPost,\n  getAllPosts,\n  updateLikePost,\n} from \"./apiCalls\";\nimport { setAuthHeadersAfterLogin } from \"./base\";\nimport { saveAuthDataToDevice } from \"./storage\";\nimport { toast } from \"react-toastify\";\n\nexport const login = (params, navigate, setIsLoggedIn) => {\n  userLogin(params)\n    .then((response) => {\n      setAuthHeadersAfterLogin(response.headers, response.data.token);\n      saveAuthDataToDevice(response.headers, response.data.token);\n      setIsLoggedIn(true);\n      toast.success(\"User Logged In Successfully\");\n      navigate(\"/dashboard\");\n    })\n    .catch((error) => {\n      toast.error(error.message);\n    });\n};\n\nexport const register = (params) => {\n  console.log(params);\n  return userRegister(params);\n};\n\nexport const setGoal = (params, navigate) => {\n  userSetGoal(params)\n    .then((response) => {\n      navigate(\"/dashboard\");\n      toast.success(\"Goal Added Successfully\");\n    })\n    .catch((error) => {\n      toast.error(\"Someting went wrong\");\n    });\n};\n\nexport const getGoalData = () => {\n  return getUserGoalData();\n};\n\nexport const getUserInfo = () => {\n  return getMyInfo();\n};\n\nexport const getUsersAllGoals = () => {\n  return getUserGoals();\n};\n\nexport const setNewPost = (params) => {\n  createNewPost(params)\n    .then((response) => {\n      console.log(response);\n      toast.success(\"Post created succesfully\");\n    })\n    .catch((error) => {\n      console.log(error);\n      toast.error(\"Something went wrong\");\n    });\n};\n\nexport const getAllPostsList = () => {\n  return getAllPosts();\n};\n\nexport const likePost = () => {\n  updateLikePost()\n    .then((response) => {\n      console.log(response);\n      toast.success(\"Post liked\");\n    })\n    .catch((error) => {\n      console.log(error);\n      toast.error(\"something went wrong\");\n    });\n};\n"],"mappings":"AAAA,SACEA,SAAS,EACTC,YAAY,EACZC,WAAW,EACXC,eAAe,EACfC,SAAS,EACTC,YAAY,EACZC,aAAa,EACbC,WAAW,EACXC,cAAc,QACT,YAAY;AACnB,SAASC,wBAAwB,QAAQ,QAAQ;AACjD,SAASC,oBAAoB,QAAQ,WAAW;AAChD,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,OAAO,MAAMC,KAAK,GAAG,CAACC,MAAM,EAAEC,QAAQ,EAAEC,aAAa,KAAK;EACxDf,SAAS,CAACa,MAAM,CAAC,CACdG,IAAI,CAAEC,QAAQ,IAAK;IAClBR,wBAAwB,CAACQ,QAAQ,CAACC,OAAO,EAAED,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;IAC/DV,oBAAoB,CAACO,QAAQ,CAACC,OAAO,EAAED,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC;IAC3DL,aAAa,CAAC,IAAI,CAAC;IACnBJ,KAAK,CAACU,OAAO,CAAC,6BAA6B,CAAC;IAC5CP,QAAQ,CAAC,YAAY,CAAC;EACxB,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAK;IAChBZ,KAAK,CAACY,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;EAC5B,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAIZ,MAAM,IAAK;EAClCa,OAAO,CAACC,GAAG,CAACd,MAAM,CAAC;EACnB,OAAOZ,YAAY,CAACY,MAAM,CAAC;AAC7B,CAAC;AAED,OAAO,MAAMe,OAAO,GAAG,CAACf,MAAM,EAAEC,QAAQ,KAAK;EAC3CZ,WAAW,CAACW,MAAM,CAAC,CAChBG,IAAI,CAAEC,QAAQ,IAAK;IAClBH,QAAQ,CAAC,YAAY,CAAC;IACtBH,KAAK,CAACU,OAAO,CAAC,yBAAyB,CAAC;EAC1C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChBZ,KAAK,CAACY,KAAK,CAAC,qBAAqB,CAAC;EACpC,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMM,WAAW,GAAG,MAAM;EAC/B,OAAO1B,eAAe,EAAE;AAC1B,CAAC;AAED,OAAO,MAAM2B,WAAW,GAAG,MAAM;EAC/B,OAAO1B,SAAS,EAAE;AACpB,CAAC;AAED,OAAO,MAAM2B,gBAAgB,GAAG,MAAM;EACpC,OAAO1B,YAAY,EAAE;AACvB,CAAC;AAED,OAAO,MAAM2B,UAAU,GAAInB,MAAM,IAAK;EACpCP,aAAa,CAACO,MAAM,CAAC,CAClBG,IAAI,CAAEC,QAAQ,IAAK;IAClBS,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;IACrBN,KAAK,CAACU,OAAO,CAAC,0BAA0B,CAAC;EAC3C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChBG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;IAClBZ,KAAK,CAACY,KAAK,CAAC,sBAAsB,CAAC;EACrC,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMU,eAAe,GAAG,MAAM;EACnC,OAAO1B,WAAW,EAAE;AACtB,CAAC;AAED,OAAO,MAAM2B,QAAQ,GAAG,MAAM;EAC5B1B,cAAc,EAAE,CACbQ,IAAI,CAAEC,QAAQ,IAAK;IAClBS,OAAO,CAACC,GAAG,CAACV,QAAQ,CAAC;IACrBN,KAAK,CAACU,OAAO,CAAC,YAAY,CAAC;EAC7B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;IAChBG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;IAClBZ,KAAK,CAACY,KAAK,CAAC,sBAAsB,CAAC;EACrC,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}